'''
1. Файл `minutes_n_ingredients.csv` содержит информацию об идентификаторе рецепта, 
времени его выполнения в минутах и количестве 
необходимых ингредиентов. Считайте данные из этого файла в виде массива `numpy` типа `int32`, 
используя `np.load_txt`. Выведите на экран первые 5 строк массива.
'''

import numpy as np

mni = np.loadtxt('minutes_n_ingredients.csv', dtype='int32', skiprows=1, delimiter=',')

print(mni[:5])

'''
2. Вычислите среднее значение, минимум, 
максимум и медиану по каждому из столбцов, кроме первого.
'''

print(np.mean(mni[:,1:], axis=0)) #среднее 1

print(np.average(mni[:, 1:], axis=0)) #среднее 2

print(np.min(mni[:, 1:], axis=0))

print(np.max(mni[:, 1:], axis=0))

print(np.median(mni[:, 1:], axis=0))

'''
3.  Посчитайте, для скольких рецептов указана продолжительность, равная нулю. 
Замените для таких строк значение в данном столбце на 1.
'''

print(mni[mni[:,1] == 0].shape[0])

mni[:, 1] = np.where((mni[:, 1] == 0), 1, mni[:, 1])

print(mni)

'''
4.  Посчитайте, сколько уникальных рецептов находится в датасете.
'''

print(np.size(np.unique(mni[:,1:], axis=0)))

'''
5. Сколько и каких различных значений кол-ва ингредиентов присутвует в рецептах из датасета?
'''

print(np.size(np.unique(mni[:,2], axis = 0))) #сколько

print(np.unique(mni[:,2], axis = 0)) #какие

'''
6. Создайте версию массива, содержащую информацию только о рецептах, состоящих не более чем из 5 ингредиентов.
'''

print(mni[mni[:,2] <= 5])

'''
7. Для каждого рецепта посчитайте, сколько в среднем 
ингредиентов приходится на одну минуту рецепта. 
Найдите максимальное значение этой величины для всего датасета
'''

print(np.mean(mni[:, 2] / mni[:, 1]))  # в среднем

print(np.max(mni[:, 2] / mni[:, 1]))  # максимум

'''
8. Вычислите среднее количество ингредиентов для топ-100 
рецептов с наибольшей продолжительностью
'''

print(np.mean(np.sort(mni[:,1], axis = 0)[::-1][:100]))

'''
9. Выберите случайным образом и выведите информацию о 10 различных рецептах
'''

print(mni[np.random.randint(np.size(mni, axis = 0), size=10)]) #1 вариант

print(mni[np.random.choice(mni.shape[0], size=10, replace=False)]) #2 вариант

'''
10. Выведите процент рецептов, кол-во ингредиентов в которых меньше среднего.
'''

a = mni[mni[:, 2] < np.mean(mni, axis = 0)[2]]

print(f'{(a.shape[0] / mni.shape[0]) * 100}%')

'''
11. Назовем "простым" такой рецепт, длительность выполнения которого не больше 20 минут и 
кол-во ингредиентов в котором не больше 5. 
Создайте версию датасета с дополнительным столбцом, значениями которого являются 1, 
если рецепт простой, и 0 в противном случае.
'''

simple = (mni[:, 1] <= 20) & (mni[:, 2] <= 5)
o = np.zeros((mni.shape[0],1), dtype='int32') 

mni_v2 = np.append(mni, o, axis=1)
mni_v2[:,3] = np.where(simple, 1, 0)

print(mni_v2)

'''
12. Выведите процент "простых" рецептов в датасете
'''

a = mni[mni[:, 2] < np.mean(mni, axis = 0)[2]]
o = mni_v2[mni_v2[:,3] == 1].shape[0]

print(f'{(o / mni_v2.shape[0]) * 100}%')